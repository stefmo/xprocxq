= Unit Tests Overview =

There are 2 types of unit tests used for xproc.xq

  * XQuery unit tests: These test xquery code base themselves using my homegrown XQuery Unit Testing Suite [http://xprocxq.googlecode.com/svn/trunk/main/test/xquery/test.xqm test.xqm]

  * XProc functional tests: These run xproc.xq against a couple of sets of actual XProc XML Pipelines

All unit tests are controlled by Apache Ant ... I could have just as well used make or something else; the thinking here is that most of the XQuery processors of interest are written in Java.

_Note: The XProc functional tests are further split into my own basic tests and I have started an area of unit tests which are converted into Norman Walsh's XProc [http://tests.xproc.org/ Test Suite]._


= Latest committed XQuery Unit Test results =

[http://xprocxq.googlecode.com/svn/trunk/main/reports/result-baseline-test.html Baseline Unit Tests]: tests the unit test module itself (if that makes any sense)

[http://xprocxq.googlecode.com/svn/trunk/main/reports/result-core-test.html Core xproc.xq Unit Tests]: tests basic core aspects of xproc.xq

[http://xprocxq.googlecode.com/svn/trunk/main/reports/result-step-seq-test.html Step ordering Unit Tests]: tests ordering of pipeline steps, which can be quite tricky due to how inputs are bound.

[http://xprocxq.googlecode.com/svn/trunk/main/reports/result-std-test.html XProc Standard Step Unit Tests]: tests the standard steps 

[http://xprocxq.googlecode.com/svn/trunk/main/reports/result-opt-test.html XProc Optional Step Unit Tests]: tests optional steps

[http://xprocxq.googlecode.com/svn/trunk/main/reports/result-ext-test.html Extension Step Unit Tests]: test extension steps added by xproc.xq

[http://xprocxq.googlecode.com/svn/trunk/main/reports/result-comp-test.html Component Unit Tests]: test xproc components

= Latest commited XProc Unit Test results =

tba