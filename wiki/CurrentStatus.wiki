#summary Describes current 'state of play' with xproc.xq

= Status =

24/09/2008 getting down to the nitty gritty for an initial release .... subpipelines and compound steps are my biggest issues at the moment ... and trying to implement as many std and optional steps as possible .. alpha release is preeminent (promises, promises). 


= Changelog =

Check out the [http://xprocxq.googlecode.com/svn/trunk/main/ChangeLog Changelog] included in the source code. This file is  not always up to date in trunk but will reflect reality for tag releases.


= TODO =

The source code [http://xprocxq.googlecode.com/svn/trunk/main/TODO TODO] file is the best place to find this information.


= Limitations and Issues=

There are so many issues to list .... so I will just highlight the major ones;

  * depends on one having bought Michael Kay's [http://www.saxonica.com Saxon-SA]  XSLT/XQUERY processor ... as dependent on SA version and even then it does very little ;)

  * checking that sequences are correct everywhere

  * sync all error messages

  * select attribute on options

  * working on subpipelines

  * check that default naming is ok 

  * tweaking top level input/output bindings

  * ext:pre and ext:post roughly equiv to stdin and stdout

  * tweaking non primary input/output handling

  * range of performance issues (though I have removed all eval code)

  * need to tweak step declarations and step validation with respect to honoring step functional signature

  * need to implement imports and library import precedence

  * planned release version will support both eXist and SAXON


{{{
 <p:declare-step name="helloworld"
            xmlns:p="http://www.w3.org/ns/xproc">


    <p:identity name="step2">
       <p:input port="step2-input">
              <p:pipe step="step1" port="step1-output"/>
       </p:input>
       <p:output port="step2-output"/>
    </p:identity>

    <p:count name="step3">
        <p:input port="step3-input">
              <p:pipe step="step2" port="step2-output"/>
       </p:input>
    </p:count>

    <p:count name="step1">
        <p:input port="step1-input">
              <p:pipe step="helloworld" port="std-input"/>
        </p:input>
        <p:output port="step1-output"/>
    </p:count>

 </p:declare-step>

}}}



_Note: Looking at the current trunk/TODO file will help you determine what I am focusing on for now._

= When will you release and will xproc.xq be compliant ? =

If I had a road map it would be;

  * update testsuite (10% done)
  * do standard steps implementations (50% done)
  * do optional & extension steps implementations (50% done)
  * ensure static and dynamic error checking is working properly (40% done)
  * ensure namespaces are fixed up properly (20% done)
  * build process to derive eXist and Saxon impl from same codebase (20% done)

I will need to get each of the above near 100% before I release.

I believe that I will partially satisfy XProc v1.0 compliance ... the choice of using XQuery restricts me somewhat in that I have to resort to extending the underlying XQUery processor. Here are the real problems;

  * Try/Catch mechanism