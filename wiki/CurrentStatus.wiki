= Status =

3/12/2007 I am just about ready to commit the bulk of v.5 which represents the first version of xproc.xq that 'does stuff. Perhaps in time to announce whilst XML 2007 is running ;)

= Changelog =


Check out the [http://xprocxq.googlecode.com/svn/trunk/main/ChangeLog Changelog] included in the source code. This file is  not always up to date in trunk but will reflect reality for tag releases.


= TODO =

The source code [http://xprocxq.googlecode.com/svn/trunk/main/TODO TODO] file is the best place to find this information.


= Limitations =

There are so many to list .... so I will just list the major ones

  * very limited std step library

  * non-standard util:step wraps top level inputs and outputs, as a intermediate hack to make step ordering work

  * must explicitly define input connections in XProc XML

{{{
 <p:pipeline name="helloworld"
            xmlns:p="http://www.w3.org/ns/xproc"
            xmlns:util = "http://xproc.net/xproc/util">

<util:step name="helloworld">
  <p:input port="std-input"/>
  <p:output port="std-output"/>
</util:step>

    <p:identity name="step2">
       <p:input port="step2-input">
              <p:pipe step="step1" port="step1-output"/>
       </p:input>
       <p:output port="step2-output"/>
    </p:identity>

    <p:count name="step3">
        <p:input port="step3-input">
              <p:pipe step="step2" port="step2-output"/>
       </p:input>
    </p:count>

    <p:count name="step1">
        <p:input port="step1-input">
              <p:pipe step="helloworld" port="std-input"/>
        </p:input>
        <p:output port="step1-output"/>
    </p:count>


 </p:pipeline>


}}}

  * no command line entry point

  * have yet to remove dependency with [http://www.saxonica.com Saxon-SA] (though our targets are Saxon-B and eXist)

Note: Looking at the current trunk/TODO file will help you determine what I am focusing on for now.


= When will feature X be done or xproc.xq be compliant ? =

There is a real desire to get to XProc v1.0 compliance, but I am generally pessimistic that I will be able to get to this. There are all sorts of issues, some that have been surmounted, some I have yet to even engage with yet (but known from the start).

As for knowing a 'road map' or what features will be done in what order, this is a bit too hard to know. I know I will require at least one major refactor before hitting v1.0 ... I have also encountered at least 2 or 3 real 'deal breakers' to compliance that I was unaware of before I started. 

If I had a road map, in plan view it would be

  * (re) implement options
  * (re) implement xproc logic structures
  * finish standard steps implementations
  * finish optional steps implementations
  * ensure static error checking is working properly
  * ensure dynamic error checking is working propery
  * expand existing testsuite to include more exotic corner cases

so you can see, lots to do ;)