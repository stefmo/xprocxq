21/04/2009 xprocxq has now been ported to eXist 

== Changelog ==

Check out [http://xprocxq.googlecode.com/svn/trunk/main/ChangeLog Changelog] included in the source code. This file is  not always up to date in trunk but will reflect reality for tag releases.


== Issues ==

The [http://code.google.com/p/xprocxq/issues/list project issue tracker] is the best place to find and submit issues.


== Limitations and Issues ==

Here is a list of the more severe limitations:


 * due to my use of weak typing in XQuery there are several interrelated issues which will eventually go away as I apply datatypes

 * inconsistent or no support for sequences where you would expect them

 * defining reusable pipelines using p:library and p:declare-step is currently disabled 

 * xproc level errors are thrown from XQuery code, makes it difficult to determine proper line numbers and the output is unwieldy.

 * eXist requires usage of ./ convention in p:when (in p:choose) test attributes 

 * naive preparsing will get replaced by something a bit more robust, the current impact is that there are some odd step sorting issues. The way around this is to explicitly bind each port in your XProc.

 * p:xquery currently uses a c:result element to output. Also p:xquery requires one to escape contents of c:xquery element, which is a bit odd but how the current spec works

 * xproc xpath extension functions do not work at this moment in time

 * declare base-uri affects module imports (need to investigate across all XQuery processors)

 * cant pass required/add-attribute--002.xml test depends on namespace handling module to be finished

 * errors and/or p:error does not write to error port (also discussing need for a generic 'implementator specific error code' with XProc WG)

Please review the examples included in the release version to get a sense of what is possible with the current version. Generally simple pipelines work and xprocxq should complain if it doesn't support a particular step or component.

_Note: Looking at the current trunk/TODO file will help you determine what I am focusing on for now._

== Roadmap ==

Looks like this for now.

  * release eXist version ('throw it over the wall')
  * implement as many of the standard & optional steps as possible
  * refactor handling of sequences
  * refactor weak typing and preparse routines
  * ensure static and dynamic error checking is working properly
  * create namespace handling module to implement more sophisticated namespace fixup 