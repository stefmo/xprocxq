#summary Describes current 'state of play' with xproc.xq

= Status =

5/6/2008 working off May 1st spec ... have yet to pass my unit tests again (been a month!) ... hoping to turn a corner sometime in the coming weeks. For now I am not commiting to google code svn until I start passing some of the basic tests.


= Changelog =


Check out the [http://xprocxq.googlecode.com/svn/trunk/main/ChangeLog Changelog] included in the source code. This file is  not always up to date in trunk but will reflect reality for tag releases.


= TODO =

The source code [http://xprocxq.googlecode.com/svn/trunk/main/TODO TODO] file is the best place to find this information.


= Limitations and Issues=

There are so many issues to list .... so I will just highlight the major ones;

  * currently a bit out of step with latest version of xproc draft .... this will change soon

  * depends on one having bought Michael Kay's [http://www.saxonica.com Saxon-SA]  XSLT/XQUERY processor ... and even then it does very little ;)

  * very limited std step library and optional (just p:xquery) library

  * its best to explicitly define input connections in XProc XML

{{{
 <p:pipeline name="helloworld"
            xmlns:p="http://www.w3.org/ns/xproc"
            xmlns:util = "http://xproc.net/xproc/util">

  <p:input port="source"/>
  <p:output port="result"/>

    <p:identity name="step2">
       <p:input port="step2-input">
              <p:pipe step="step1" port="step1-output"/>
       </p:input>
       <p:output port="step2-output"/>
    </p:identity>

    <p:count name="step3">
        <p:input port="step3-input">
              <p:pipe step="step2" port="step2-output"/>
       </p:input>
    </p:count>

    <p:count name="step1">
        <p:input port="step1-input">
              <p:pipe step="helloworld" port="std-input"/>
        </p:input>
        <p:output port="step1-output"/>
    </p:count>

 </p:pipeline>

}}}

  * step ordering is still a bit flaky ... but it virtually works for simplistic xprocs

  * no command line entry point .. all operation is via Ant script, which just means running unit tests

_Note: Looking at the current trunk/TODO file will help you determine what I am focusing on for now._

= When will feature X be done or xproc.xq be compliant with W3C spec ? =

I have a real desire to get xproc.xq to XProc v1.0 compliance, but using XQuery means I am  somewhat limited. There are all sorts of issues, some that have been surmounted, some I have yet to even engage with yet (but known from the start).

Once I have worked through all of XProc primary components and logic structure then I will be able to comment more about the more exotic edge cases.

If I had a road map, in plan view it would be;

  * (re) implement xproc logic structures (try catch, choose, etc)
  * finish standard steps implementations
  * finish optional & extension steps implementations
  * ensure static and dynamic error checking is working properly
  * ensure namespaces are fixed up properly
  * update testsuite