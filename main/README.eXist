This is xproc.xq release v0.6                                      
-----------------------------

xprocxq is an experimental bootstrap implementation of W3C XProc 
Specification, written in xquery.

XProc is a general utility for working with XML technologies.

Using XProc's built in (or extension) steps you define XML pipelines 
which can model a wide range of processes. Steps accept input XML and 
produce output XML, its in this manner (somewhat analogous to unix pipes) 
that you can orchestrate and create sophisticated XML workflows.


Why XProc in XQuery ?
---------------------

XQuery's somewhat functional approach appealed to me and having been 
a long time XSLT user I wanted to gain some understanding of the nuances 
between XSLT and XQuery.

In building xqueryxq, my primary goals were;

    * Exercise fundamental FP principles building a non trivial XQuery 
application. I think I have achieved this goal, as xprocxq 'main engine'
 is the util:step-fold() function which operates on simple pipelines. 

    * To understand variability between XQuery processors. I think there 
is a surprising amount of differences between XQuery processors, but 
thankfully mostly in the form of extension functions, implicit type casting 
and in smaller part some interpretations of the spec (where the spec allowed 
for impl to do things as they see fit). The real impact though is that we 
need things like expath and exquery to allow for even a remote chance at 
compatibility between processors. 


PREREQUISITES
-------------

xprocxq runs in the the current trunk version of eXist XML Database 
(exist.sourceforge.net), though it is designed to eventually run
portably across several other XQuery processors. 


INSTALL
-------

To install within eXist XML Database follow these instructions.

I) Build (using Apache Ant) xprocxq.jar and place into $EXIST_HOME/lib/user directory

II) insert these elements in eXist conf.xml, in <built-in-modules/> element

<module src="resource:net/xproc/xprocxq/src/xquery/xproc.xqm"
uri="http://xproc.net/xproc"/>                                                                               
<module src="resource:net/xproc/xprocxq/src/xquery/util.xqm"
uri="http://xproc.net/xproc/util"/>                                                                          
<module src="resource:net/xproc/xprocxq/src/xquery/const.xqm"
uri="http://xproc.net/xproc/const"/>                                                                         
<module src="resource:net/xproc/xprocxq/src/xquery/functions.xqm"
uri="http://xproc.net/xproc/functions"/>                                                                     
<module src="resource:net/xproc/xprocxq/src/xquery/functions.xqm"
uri="http://xproc.net/xproc/functions"/>                                                                     
<module src="resource:net/xproc/xprocxq/src/xquery/std.xqm"
uri="http://xproc.net/xproc/std"/>                                                                           
<module src="resource:net/xproc/xprocxq/src/xquery/ext.xqm"
uri="http://xproc.net/xproc/ext"/>                                                                           
<module src="resource:net/xproc/xprocxq/src/xquery/opt.xqm"
uri="http://xproc.net/xproc/opt"/>                                                            
<module src="resource:net/xproc/xprocxq/src/xquery/ant.xqm"
uri="http://xproc.net/xproc/a"/>                                                                     
<module src="resource:net/xproc/xprocxq/src/xquery/naming.xqm"
uri="http://xproc.net/xproc/naming"/>


note - soon there will be just a single module import, but due to how static 
xquery loading currently works in eXist, we need to register all of 
xqueryxq modules

III) Load /examples directory, included in the dist, into eXist XML Database 
and access test.xq in browser (via eXist XML Database rest interface). Change 
the path variable.

IV) Test using browser ex. http://127.0.0.1:8080/exist/rest/examples/test.xq


Limitations
-----------

xprocxq, being implemented in XQuery, currently has several
limitations and is no where compliant with the existing XProc 
draft specification.

As I originally developed using SAXON-SA, I have had to disable
 many of XProc steps as I port across but should have a good set 
of steps running somewhat soon.

Here is a list of the more severe limitations:

* due to my use of weak typing in XQuery there are several 
interrelated issues, but this will change as I sanitize the code

* currently there is little consistent or no support for sequences 
where you would expect them, once again I am addressing this as I 
work porting things across 

* defining reusable pipelines using p:library and p:declare-step 
is currently disabled 

* errors will first start out as an XQuery error.For example, you 
will see that errors are reported to originate from util.xqm as this 
is where static and dynamic errors are evaluated.

* need to use ./ convention in p:when (in p:choose) test attributes 
due to eXist

* some step sorting issues (intermixing of steps using p:inline)

* p:xquery currently uses a c:result element to output

* p:xquery needs to use a <!CDATA[]> section to wrap up contents of 
c:query (yes, I think this is ugly but is spec behavior)

* extension functions do not work at this moment in time

* declare base-uri affects module imports (need to investigate across 
all XQuery processors)

* cant pass required/add-attribute--002.xml test depends on namespace 
handling module to be finished

* errors and/or p:error does not write to error port (also discussing 
need for a generic 'implementator specific error code' with XProc WG)

* current preparsing routine is naive; I have a more rigorous solution 
in a branch to merge soon

Please review the examples included in the release version to get a
sense of what is possible with the current version.


COMMANDLINE
-----------

There is a commandline version but this was developed for earlier prototype (which used SAXON-SA),
I have disabled for the time being.

Usage: xprocxq [options] [--import library|pipeline] source pipeline

xprocxq processes XProc pipeline documents.

OPTIONS:
   -h      Show this message
   -d      Show debug information
   -t      Show timing information
   -i      Set input port document
   -o      Set output port document
   -x      Enable XInclude processing
   -d      Enable DTD validation


RELEASE DISTRIBUTION
--------------------

The release distribution consists zip package containing the following:

README		This document
VERSION     A summary of the distribution version
LICENSE		Included licenses notice
ChangeLog   Generated svn changelog
xprocxq.jar xprocxq application		
test/examples	XProc tests and test.xq for testing with eXist XML Database

All release files can be found here http://code.google.com/p/xprocxq/source/browse/#svn/releases


SOURCE DISTRIBUTION
-------------------

The source distribution consists of:
   
README      This document
VERSION     A summary of the distribution version
RELEASE     Current release version	
LICENSE		Included licenses notice
LOC			lines of code metric	
ChangeLog   Generated svn changelog
build.xml   Apache Ant build file For generating release dist
bin/    	Xproc run script
etc/    	Misc artifacts
lib/    	3rd party deps, this directory is empty for the time being
test/   	XProc Unit Tests
src/    	XQuery source files

Source distro is available by svn checkout http://xprocxq.googlecode.com/svn/trunk/ xprocxq-read-only


CHANGES
-------

Review the ChangeLog file which is generated from svn 
history (http://code.google.com/p/xprocxq/source/list). 


TODO/ISSUES/BUGS
----------------

Known issues are tracked using the project issue tracker
http://code.google.com/p/xprocxq/issues/list.

Please report bugs here.


WEBSITES
--------

xproc.xq 
http://code.google.com/p/xprocxq/

W3C XML Working Group lastest XProc draft
http://www.w3.org/XML/XProc/docs/langspec.html

tests.xproc.org
http://tests.xproc.org

www.exproc.org
http://exproc.org

eXist XML Database
http://exist.sourceforge.net


EMAIL
-----

jim.fuller@webcomposite.com

A general mailing list is maintained by W3C for xproc developers
xproc-dev@w3.org where questions can be asked about xprocxq and 
other XProc processors.


NOTICES
-------

xprocxq is released under MPL v1.1, where the file LICENSE contains 
a copy of this license as well as links to any embedded software
licenses.

xprocxq uses the expath http-client module which is released under MPL v1.1


COPYRIGHT
---------

xprocxq, xproc.xq and related material is the Copyright (C) 2009
of James Fuller (jim.fuller@webcomposite.com), All rights reserved.


DISCLAIMER
----------

xprocxq is BETA software and is not intended for production usage 
with all the usual caveats applying of use this software at your own risk.
