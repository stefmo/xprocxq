----------------------------------------
general
----------------------------------------

replace calls to secondary with a u:get-binding-output() function

----------------------------------------
p:choose
----------------------------------------
* each subpipeline must have the same output signature
* need to ensure source input gets bound
* need to cater for multiple p:when statements
* xpath-context is just a p:input used with $when_eval

----------------------------------------
ISSUE
----------------------------------------

* components/multi-container steps needs implementation (p:group,p:viewport,p:choose,p:for-each, p:pipeline, p:library, p:try/catch)
* migrate errors from string to QName
* make error reporting look nicer
* declare-steps needs refactoring in parsing and execution
* inputs in nested p:declare-steps need fixing due to $allcomp in xproc:explicitnames
* namespace fixups: enumerate step level in scope namespaces
* sequences need rationalisation and sanitisation
* p:try in evalstep ?
* target main eXist scenarios
    - xquery->p:choose->xquery
    - xslt -> xslfo -> pdf
	- form handler
	- the same applies to all apps where a user needs to log in first
	- how about a simple wizard-style example, e.g. along the lines of the "number guessing" example in eXist. I think the page flow logic could all be done in xproc.
	
* create namespace module to manage namespace fixups 
* testsuite represents sequences as t:document in count-001.xml in testing suite ?


Limitations/Differences
* need to use $context in p:choose
* some step sorting issues (intermixing of steps using p:inline)
* p:xquery currently uses a c:result element to output
* p:compare currently has a primary result port
* extension functions do not work in select statements (just xquery)
* declare base-uri affects module imports in saxon (need to investigate in eXist)
* cant pass required/add-attribute--002.xml test depends on namespace handling module to be finished
* p:error does not write to error port (also discussing need for a generic 'implementator specific error code' with XProc WG)

--------------------------------------------------------------------------------------




----------------------------------------
exist migration
----------------------------------------

* statically load modules to conf.xml
<module src="resource:net/xproc/xprocxq/src/xquery/xproc.xqm"                                             
     uri="http://xproc.net/xproc"/>                                                                                                                                                                                 
<module src="resource:net/xproc/xprocxq/src/xquery/util.xqm"                                                  uri="http://xproc.net/xproc/util"/>                                                                                                                                                                            
<module src="resource:net/xproc/xprocxq/src/xquery/const.xqm"                                            
     uri="http://xproc.net/xproc/const"/>                                                                                                                                                                           
<module src="resource:net/xproc/xprocxq/src/xquery/functions.xqm"                                         
     uri="http://xproc.net/xproc/functions"/>                                                                                                                                                                       
<module src="resource:net/xproc/xprocxq/src/xquery/functions.xqm"                                         
     uri="http://xproc.net/xproc/functions"/>                                                                                                                                                                      
<module src="resource:net/xproc/xprocxq/src/xquery/std.xqm"                                               
     uri="http://xproc.net/xproc/std"/>                                                                                                                                                                             
<module src="resource:net/xproc/xprocxq/src/xquery/ext.xqm"                                               
     uri="http://xproc.net/xproc/ext"/>                                                                                                                                                                             
<module src="resource:net/xproc/xprocxq/src/xquery/opt.xqm"                                               
     uri="http://xproc.net/xproc/opt"/>                                                                                                                                                                             
<module src="resource:net/xproc/xprocxq/src/xquery/comp.xqm"                                              
     uri="http://xproc.net/xproc/comp"/>

* replace saxon:function with util:function
* replace saxon:call with util:call

amend
	* u:random
	* u:xquery
	* u:parse-string
	* u:eval
	* u:xslt
	* u:serialize
	* u:pipeline-step-sort
	* u:unparsed-data
	* $const:default-imports
	* $opt:default-imports

* util:function 1st arg is a qname ala xs:QName("string value")
