<?xml version="1.0"?>
<project name="xproc.xq" basedir=".">
    <description>This build file builds the single java extension needed for Saxon-SA. Past that,
it is mostly a unit test runner for firing off XQuery and XProc tests.</description>


    <!-- ===================================================== -->
    <!-- dep properties                                        -->
    <!-- ===================================================== -->
    <!-- note: adjust for your xquery processor -->
    <xmlproperty file="properties.xml"/>

    <property name="logonerror" value="false"/>

    <!-- ===================================================== -->
    <!-- unit test unit comp                                   -->
    <!-- ===================================================== -->
    <target name="test-comp" description="test comp unit tests">

        <xquery-saxon dest="result/comp.xml"
                      query="test/xquery/comp.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-comp-test.html"
                    style="etc/test.xsl"
                    xml="result/comp.xml"/>

    </target>

    <!-- ===================================================== -->
    <!-- unit test ext                                         -->
    <!-- ===================================================== -->
    <target name="test-ext" description="test ext unit tests">

        <xquery-saxon dest="result/ext.xml"
                      query="test/xquery/ext.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-ext-test.html"
                    style="etc/test.xsl"
                    xml="result/ext.xml"/>

    </target>

    <!-- ===================================================== -->
    <!-- unit test unit test suite ;)                          -->
    <!-- ===================================================== -->
    <target name="test-test" description="test baseline unit tests">

        <xquery-saxon dest="result/baseline.xml"
                      query="test/xquery/baseline.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-baseline-test.html"
                    style="etc/test.xsl"
                    xml="result/baseline.xml"/>

    </target>

    <!-- ===================================================== -->
    <!-- unit test xproc.xq standard steps                     -->
    <!-- ===================================================== -->
    <target name="test-std" description="run std xquery unit tests">

        <xquery-saxon dest="result/std.xml"
                      query="test/xquery/std.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-std-test.html"
                    style="etc/test.xsl"
                    xml="result/std.xml"/>

    </target>


    <!-- ===================================================== -->
    <!-- unit test xproc.xq optional steps                     -->
    <!-- ===================================================== -->
    <target name="test-opt" description="run optional xquery unit tests">

        <xquery-saxon dest="result/opt.xml"
                      query="test/xquery/opt.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-opt-test.html"
                    style="etc/test.xsl"
                    xml="result/opt.xml"/>

    </target>

    <!-- ===================================================== -->
    <!-- unit test xproc.xq engine                             -->
    <!-- ===================================================== -->
    <target name="test-ant" description="run ant xquery unit tests">

        <xquery-saxon dest="result/ant.xml"
                      query="test/xquery/ant.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-core-test.html"
                    style="etc/test.xsl"
                    xml="result/ant.xml"/>

    </target>


    <!-- ===================================================== -->
    <!-- unit test ant:build-target step                       -->
    <!-- ===================================================== -->
    <target name="test-target" description="for testing ant:build-target step">
        <echo message="ant:build-target is running normally"/>
    </target>

    
    <!-- ===================================================== -->
    <!-- unit test xproc.xq engine                             -->
    <!-- ===================================================== -->
    <target name="test-core" description="run core xquery unit tests">

        <xquery-saxon dest="result/core.xml"
                      query="test/xquery/core.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-core-test.html"
                    style="etc/test.xsl"
                    xml="result/core.xml"/>

    </target>


    <!-- ===================================================== -->
    <!-- unit test preparse engine                             -->
    <!-- ===================================================== -->
    <target name="test-preparse" description="run preparse xquery unit tests">

        <xquery-saxon dest="result/preparse.xml"
                      query="test/xquery/preparse.xq"
                      input="file:test/data/test.xml"/>

        <xslt-saxon dest="result/result-preparse-test.html"
                    style="etc/test.xsl"
                    xml="result/preparse.xml"/>

    </target>


    <!-- ===================================================== -->
    <!-- run all xquery unit tests                             -->
    <!-- ===================================================== -->
    <target name="test-all-xquery" depends="clean,test-test,test-core,test-preparse,test-std,test-opt,test-comp,test-ext"
            description="run all xquery tests">

    </target>



    <!-- ===================================================== -->
    <!-- xproc.xq sorting xproc unit tests                     -->
    <!-- ===================================================== -->
    <target name="xproc-ordering-test" depends="clean"  description="run xproc.xq on basic ordering xproc">

        <xproc-saxon dest="result/xproc_order_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/ordering/inputordering1.xml"/>
        <xproc-saxon dest="result/xproc_order_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/ordering/inputordering2.xml"/>
        <xproc-saxon dest="result/xproc_order_result_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/ordering/inputordering3.xml"/>

    </target>

    <!-- ===================================================== -->
    <!-- xproc.xq count xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-count-test" depends="clean"  description="run xproc.xq on basic count xproc">

        <xproc-saxon dest="result/xproc_count_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count1.xml"/>
        <xproc-saxon dest="result/xproc_count_result_1b.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test_2.xml"
                     xproc="file:test/xproc/basic/count/count1.xml"/>
        <xproc-saxon dest="result/xproc_count_result_1_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count1_3.xml"/>
        <xproc-saxon dest="result/xproc_count_result_1_3_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count1_3_1.xml"/>
        <xproc-saxon dest="result/xproc_count_result_1_4.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count1_4.xml"/>
        <xproc-saxon dest="result/xproc_count_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count1_1.xml"/>
        <xproc-saxon dest="result/xproc_count_result_1_1b.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test2.xml"
                     xproc="file:test/xproc/basic/count/count1_1.xml"/>
        <xproc-saxon dest="result/xproc_count_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count2.xml"/>
        <xproc-saxon dest="result/xproc_count_result_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count3.xml"/>                     
        <xproc-saxon dest="result/xproc_count_result_3_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/count/count3_1.xml"/> 
    </target>
    
    <!-- ===================================================== -->
    <!-- xproc.xq delete xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-delete-test" depends="clean"  description="run xproc.xq on basic delete xproc">

        <xproc-saxon dest="result/xproc_delete_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/delete/delete1.xml"/>
              
    </target>
    
    <!-- ===================================================== -->
    <!-- xproc.xq compare xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-compare-test" depends="clean"  description="run xproc.xq on basic compare xproc">

        <xproc-saxon dest="result/xproc_compare_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/compare/compare1.xml"/>
        <xproc-saxon dest="result/xproc_compare_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/compare/compare1_1.xml"/>
        <xproc-saxon dest="result/xproc_compare_result_1_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/compare/compare1_2.xml"/>
        <xproc-saxon dest="result/xproc_compare_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/compare/compare2.xml"/>
        <xproc-saxon dest="result/xproc_compare_result_2_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/compare/compare2_1.xml"/>                     
        <xproc-saxon dest="result/xproc_compare_result_2_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/compare/compare2_2.xml"/> 
                     
    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq input xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-input-test" depends="clean"  description="run xproc.xq on basic input xproc">
        <xproc-saxon dest="result/xproc_input_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/inputs/inputs_1.xml"/>
        <xproc-saxon dest="result/xproc_input_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/inputs/inputs_1_1.xml"/>
        <xproc-saxon dest="result/xproc_input_result_1_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/inputs/inputs_1_2.xml"/>
        <xproc-saxon dest="result/xproc_inputs_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/inputs/inputs_2.xml"/>
        <xproc-saxon dest="result/xproc_inputs_result_2_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/inputs/inputs_2_1.xml"/>    
    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq import xproc tests                           -->
    <!-- ===================================================== -->
    <target name="xproc-import-test" depends="clean"  description="run xproc.xq on basic import xproc">
        <xproc-saxon dest="result/xproc_import_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/import/import1.xml"/>
        <xproc-saxon dest="result/xproc_import_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/import/import2.xml"/>
    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq filter xproc tests                           -->
    <!-- ===================================================== -->
    <target name="xproc-filter-test" depends="clean"  description="run xproc.xq on basic filter xproc">

        <xproc-saxon dest="result/xproc_filter_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/filter/filter1.xml"/>
        <xproc-saxon dest="result/xproc_filter_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/filter/filter1_1.xml"/>
        <xproc-saxon dest="result/xproc_filter_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/filter/filter2.xml"/>
        <xproc-saxon dest="result/xproc_filter_result_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/filter/filter3.xml"/>

    </target>
    

    
    <!-- ===================================================== -->
    <!-- xproc.xq schema xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-schema-test" depends="clean"  description="run xproc.xq on basic schema xproc">

        <xproc-saxon dest="result/xproc_schema_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/schema-example.xml"
                     xproc="file:test/xproc/basic/schema/schema1.xml"/>      
    </target>
    
    
    <!-- ===================================================== -->
    <!-- xproc.xq wrap xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-wrap-test" depends="clean"  description="run xproc.xq on basic wrap xproc">
        <xproc-saxon dest="result/xproc_wrap_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap1.xml"/> 
        <xproc-saxon dest="result/xproc_wrap_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap1_1.xml"/> 
        <xproc-saxon dest="result/xproc_wrap_result_1_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test_1.xml"
                     xproc="file:test/xproc/basic/wrap/wrap1_2.xml"/>
        <xproc-saxon dest="result/xproc_wrap_result_1_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap1_3.xml"/>
        <xproc-saxon dest="result/xproc_wrap_result_1_4.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap1_4.xml"/> 
        <xproc-saxon dest="result/xproc_wrap_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap2.xml"/>
        <xproc-saxon dest="result/xproc_wrap_result_2_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap2_1.xml"/>                     
        <xproc-saxon dest="result/xproc_wrap_result_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap3.xml"/>       
        <xproc-saxon dest="result/xproc_wrap_result_3_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/wrap/wrap3_1.xml"/>     
    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq unwrap xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-unwrap-test" depends="clean"  description="run xproc.xq on basic unwrap xproc">
        <xproc-saxon dest="result/xproc_unwrap_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/unwrap/unwrap1.xml"/>
        <xproc-saxon dest="result/xproc_unwrap_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/unwrap/unwrap1_1.xml"/>
    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq xquery xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-xquery-test" depends="clean"  description="run xproc.xq on basic xquery xproc">

        <xproc-saxon dest="result/xproc_xquery_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/xquery/xquery1.xml"/>                 
        <xproc-saxon dest="result/xproc_xquery_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/xquery/xquery2.xml"/>   
        <xproc-saxon dest="result/xproc_xquery_result_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/xquery/xquery3.xml"/>   
    </target>
    
    <!-- ===================================================== -->
    <!-- xproc.xq xslt xproc tests                          -->
    <!-- ===================================================== -->
    <target name="xproc-xslt-test" depends="clean"  description="run xproc.xq on basic xslt xproc">

        <xproc-saxon dest="result/xproc_xslt_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/xslt/xslt1.xml"/>                 
        <xproc-saxon dest="result/xproc_xslt_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/xslt/xslt2.xml"/>   
    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq doc xproc tests                              -->
    <!-- ===================================================== -->
    <target name="xproc-urlencode-test" depends="clean"  description="run xproc.xq on identity xproc">

        <xproc-saxon dest="result/xproc_urlencode_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/urlencode/urlencode1.xml"/>
  
    </target>
    
    
    <!-- ===================================================== -->
    <!-- xproc.xq doc xproc tests                              -->
    <!-- ===================================================== -->
    <target name="xproc-identity-test" depends="clean"  description="run xproc.xq on identity xproc">


        <xproc-saxon dest="result/xproc_identity_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/identity/identity1.xml"/>
        <xproc-saxon dest="result/xproc_identity_1b.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test_1.xml"
                     xproc="file:test/xproc/basic/identity/identity1.xml"/>
        <xproc-saxon dest="result/xproc_identity_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/identity/identity2.xml"/>
        <xproc-saxon dest="result/xproc_identity_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/identity/identity3.xml"/>
        <xproc-saxon dest="result/xproc_identity_4.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/identity/identity4.xml"/>                     
        <xproc-saxon dest="result/xproc_identity_4_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/identity/identity4_1.xml"/>    
    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq declare steyp xproc unit tests               -->
    <!-- ===================================================== -->
    <target name="xproc-declare-step-test" depends="clean"  description="run xproc.xq on basic declare-step xproc">

        <xproc-saxon dest="result/xproc_declare-step_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/declare-step/declare-step1.xml"/>
        <xproc-saxon dest="result/xproc_declare-step_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/declare-step/declare-step1_1.xml"/>
        <xproc-saxon dest="result/xproc_declare-step_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/declare-step/declare-step2.xml"/>
        <xproc-saxon dest="result/xproc_declare-step_result_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/declare-step/declare-step3.xml"/>

    </target>


    <!-- ===================================================== -->
    <!-- xproc.xq doc xproc unit tests                         -->
    <!-- ===================================================== -->
    <target name="xproc-documentation-test" depends="clean"  description="run xproc.xq on basic documentation xproc">

        <xproc-saxon dest="result/xproc_documentation_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/documentation/documentation.xml"/>

    </target>
    
    
    <!-- ===================================================== -->
    <!-- xproc.xq directory-list xproc unit tests              -->
    <!-- ===================================================== -->
    <target name="xproc-directorylist-test" depends="clean"  description="run xproc.xq on basic directory-list xproc">

        <xproc-saxon dest="result/xproc_dirlist_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/directory-list/dirlist1.xml"/>

    </target>



    <!-- ===================================================== -->
    <!-- xproc.xq error xproc unit tests                     -->
    <!-- ===================================================== -->
    <target name="xproc-error-test" depends="clean"  description="run xproc.xq for basic error testing">

        <xproc-saxon dest="result/xproc_error_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/error/error1.xml"/>

    </target>
    

    <!-- ===================================================== -->
    <!-- xproc.xq exec xproc unit tests                     -->
    <!-- ===================================================== -->
    <target name="xproc-exec-test" depends="clean"  description="run xproc.xq for basic exec testing">

        <xproc-saxon dest="result/xproc_exec_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/exec/exec1.xml"/>
    </target>

    
    <!-- ===================================================== -->
    <!-- xproc.xq perf xproc unit tests                     -->
    <!-- ===================================================== -->
    <target name="xproc-perf-test" depends="clean"  description="run xproc.xq for basic performance testing">

        <xproc-saxon dest="result/xproc_order_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/performance/perf.xml"/>

    </target>

   <target name="xproc-all" 
    depends="clean,xproc-compare-test,xproc-count-test,xproc-delete-test,xproc-documentation-test
            ,xproc-error-test,xproc-exec-test,xproc-filter-test,xproc-identity-test,xproc-ordering-test,
            xproc-schema-test,xproc-unwrap-test,xproc-wrap-test,xproc-xquery-test,xproc-xslt-test"  
    description="run all xproc tests"/>

    <!-- ===================================================== -->
    <!-- xproc.xq Hello World xproc unit tests                 -->
    <!-- ===================================================== -->
    <target name="xproc-helloworld-test" depends="clean"
            description="run xproc on basic helloworld.xml xproc">

        <xproc-saxon dest="result/xproc_result_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/helloworld/helloworld_1.xml"/>

        <xproc-saxon dest="result/xproc_result_1_1.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/helloworld/helloworld_1_1.xml"/>

         <xproc-saxon dest="result/xproc_result_1_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/helloworld/helloworld_1_2.xml"/>

        <xproc-saxon dest="result/xproc_result_1_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/helloworld/helloworld_1_3.xml"/>

        <xproc-saxon dest="result/xproc_result_2.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/helloworld/helloworld_2.xml"/>

         <xproc-saxon dest="result/xproc_result_3.xml"
                     query="src/xquery/xproc.xq"
                     input="file:test/data/test.xml"
                     xproc="file:test/xproc/basic/helloworld/helloworld_3.xml"/>

    </target>


    <!-- ===================================================== -->
    <!-- compile saxon xquery extension                        -->
    <!-- ===================================================== -->
    <!-- TODO: update to compile this at some point            -->
    <target name="saxon-compile" description="compile xquery java extension">

        <!-- compile in netbeans for now

    <javac destdir="lib" includes="src/java/*.java" source="1.5" srcdir="src/java">
            <classpath path="lib/saxon/saxon8-ant.jar:lib/saxon/saxon8-dom.jar:lib/saxon/saxon8-dom4j.jar:lib/saxon/saxon8-jdom.jar:lib/saxon/saxon8-sql.jar:lib/saxon/saxon8-xom.jar:lib/saxon/saxon8-xpath.jar:lib/saxon/saxon8-xqj.jar:lib/saxon/saxon8.jar:lib/saxon/saxon8sa-jaxp.jar:lib/saxon/saxon8sa-qc.jar:lib/saxon/saxon8sa.jar:lib/saxon"/>
    </javac>

    //-->

    </target>


    <!-- ===================================================== -->
    <!-- clean                                                 -->
    <!-- ===================================================== -->
    <target name="clean">
        <delete dir="result"/>
        <mkdir dir="result"/>
    </target>


    <!-- ===================================================== -->
    <!-- generate svn changelog                                -->
    <!-- ===================================================== -->
    <target name="svn.changelog">
        <exec executable="${p.exe.changelog}" />
    </target>



    <!-- ===================================================== -->
    <!-- MACRODEFS                                             -->
    <!-- ===================================================== -->

    <macrodef name="xslt-saxon">
        <attribute name="dest"/>
        <attribute name="style"/>
        <attribute name="xml"/>

        <sequential>
            <java classname="net.sf.saxon.Transform"
                  fork="true"
                  failonerror="false"
                  maxmemory="256m"
                  output="@{dest}/">

                <arg line="@{xml} @{style} "/>
                <classpath>
                    <pathelement location="${p.dir.lib.saxon}"/>
                    <fileset dir="${p.dir.lib.saxon}">
                        <include name="*.jar"/>
                    </fileset>
                </classpath>
            </java>
        </sequential>
    </macrodef>


    <macrodef name="xquery-saxon">
        <attribute name="dest"/>
        <attribute name="input"/>
        <attribute name="query"/>

        <sequential>
            <java classname="net.sf.saxon.Query"
                  fork="true"
                  failonerror="false"
                  maxmemory="256m"
                  output="@{dest}/">

                <arg line="-sa -s @{input} @{query}"/>
                <classpath>
                    <pathelement location="${p.dir.lib.classes}"/>
                  <pathelement location="${p.dir.lib.saxon-ext}"/>
                    <pathelement location="${p.dir.lib.saxon}"/>
                    <fileset dir="${p.dir.lib.saxon}">
                        <include name="*.jar"/>
                    </fileset>
                    <fileset dir="${p.dir.lib.ant}">
                        <include name="*.jar"/>
                    </fileset>  

                </classpath>
            </java>
        </sequential>
    </macrodef>


    <macrodef name="xproc-saxon">
        <attribute name="dest"/>
        <attribute name="input"/>
        <attribute name="query"/>
        <attribute name="xproc"/>

        <sequential>
            <java classname="net.sf.saxon.Query"
                  fork="true"
                  failonerror="false"
                  maxmemory="256m"
                  output="@{dest}/">

                <arg line="-ext:on -sa -s:@{input} -q:@{query} +xproc=@{xproc} +stdin=@{input} dflag='' tflag='' oval='' ival=''"/>
                <classpath>
                    <pathelement location="${p.dir.lib.classes}"/>
                    <pathelement location="${p.dir.lib.saxon-ext}"/>
                    <pathelement location="${p.dir.lib.saxon}"/>
                    <fileset dir="${p.dir.lib.saxon}">
                        <include name="*.jar"/>
                    </fileset>                
                    <fileset dir="${p.dir.lib.ant}">
                        <include name="*.jar"/>
                    </fileset>  
                </classpath>
            </java>
        </sequential>
    </macrodef>

</project>
